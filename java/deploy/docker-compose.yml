version: "3"

networks:
  my_network:

services:
  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-all-in-one
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - my_network

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    container_name: zipkin-all-in-one
    ports:
      - "9411:9411"
    networks:
      - my_network

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml", "" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus' metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    networks:
      - my_network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my_network

  #my services
  analysis1:
    container_name: analysis1
    build:
      context: ../
      dockerfile: deploy/Dockerfile
    ports:
      - "8080:8080"
    entrypoint: "java -javaagent:/home/docker/opentelemetry-javaagent.jar
      -Dotel.service.name=analysis1
      -Dotel.exporter.otlp.endpoint=http://otel-collector:4317
      -Dotel.traces.exporter=otlp
      -Dotel.metrics.exporter=otlp
      -Dspring.kafka.producer.bootstrap-servers=localhost:9092
      -Dspring.kafka.consumer.bootstrap-servers=localhost:9092
      -Dfile_persistence_service=ws://persistsv:8081/save
      -jar MFAnalysis-0.0.1-SNAPSHOT.jar"
    depends_on:
      - otel-collector
      - persistsv
    networks:
      - my_network
